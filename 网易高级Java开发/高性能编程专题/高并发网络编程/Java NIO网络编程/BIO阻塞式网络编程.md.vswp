vnote_backup_file_826537664 /Users/simonxue/Documents/notebooks/开发者笔记/网易高级Java开发/高性能编程专题/高并发网络编程/Java NIO网络编程/BIO阻塞式网络编程.md
# BIO阻塞式网络编程
## Http协议 - 请求数据包解析
![请求数据包](_v_images/20190530001258352_106263667.png)
第一部分：请求行，请求类型，资源路径以及HTTP版本。
第二部分：请求头部，紧接着请求行(即第一行)之后的部分，用来说明服务器要使用的附加信息
第三部分：空行，请求关部分后面的空行是必须的，请求头部和数据主体之间必须有换行
第四部分：请求数据也叫主体，可以添加任意的数据。这个例子的请求数据为空

## Http协议-响应数据包解析
![响应数据包分析](_v_images/20190530002138230_732637067.png)
第一部分：状态行。HTTP版本、状态码、状态消息
第二部分：响应报头部，紧接着请求行(即第一行)之后的部分，用来说明服务器要使用的附加信息
第三部分：空行，头部后面的空行是必须的头部和数据主体之间必须有换行
第四部分：响应正文。可以添加任意的数据。这个例子的响应正文为“Hello World”

## Http协议-响应状态码
>1xx(临时响应)
>表示临时响应并需要请求者继续执行操作的状态代码

>2xx(成功)
>表示成功处理了请求的状态代码

>3xx(重定向)
>表示要完成请求，需要进一步操作。通常，这些状态代码用来重定向

>4xx(请求错误)
>这些状态代码表示请求可能出错，妨碍了服务器的处理。

>5xx(服务器错误)
>这些状态代码表示服务器在尝试处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错

## 服务端升级版-返回Http内容
## BIO-阻塞IO的含义
阻塞(blocking) IO：资源不可用时，IO请求一直阻塞，直到反馈结果(有数据或超时)。
非阻塞(non-blocking) IO：资源不可用时，IO请求离开返回，返回数据标识资源不可用。
同步(synchronous) IO：应用阻塞在发送或接收数据的状态，直到数据成功传输或返回失败。
异步(asynchronous) IO：应用发送或接收数据后立刻返回，实际处理是异步执行的。
阻塞和非阻塞是获取资源的方式，同步/异步是程序如何处理资源的逻辑设计。代码中使用的API：ServerSocket#accept、InputStream#read都是阻塞的API。操作系统底层API中，默认Socket操作都是Blocking型，send/recv等接口都是阻塞的。
带来的问题，阻塞导致在处理网络I/0时，一个线程只能处理一个网络连接。